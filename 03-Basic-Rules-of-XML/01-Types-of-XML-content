Types of XML content:
In this chapter we will describe the following:
1. Contents of XML files
  - Types of content that appear in XML files
2. Proper XML syntax
  - Nesting rules, attributes, other things to know parse properly
3. XML validation
  - How to restrict and constrain XML content
4. XML namespaces
  - Avoiding collisions with other XML syntaxes
-----------
1. Types of XML Contents:
+------------------------------------------------------------------------+
|XML document declarati|<?xml version="1.0" encoding="UTF|8" standalone="yes"?>
+------------------------------------------------------------------------|
|Elements and Attirbute|<element attribute="value">                      |
+------------------------------------------------------------------------+
|Comments              |<-- this is a comment -->                        |
+------------------------------------------------------------------------+
|Character Data        |<![CDATA[This is text & data>]]                  |
+------------------------------------------------------------------------+
|Processing Instruction|<?SpellCheckMode mode="us-english" ?>            |
+------------------------------------------------------------------------+
|Entity References     |Character (&#60;) and General (&copyright;)      |
+----------------------+-------------------------------------------------+
--------------
The Document Declaration:
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

* Technically optional, though the W3C recommends it
  - Identifies the file as XML document
  - Provides a place for the encoding and standalone attributes
  - Must be at very beginning - not even whitespace before it
* The encoding attribute
  - Defaults to UTF-8 if you don't include it
* The standalone attribute
  - Indicates whether the document is complete by itself
----------------
XML Elements (Tags)
Elements must have valid names
  - They can begin with underscore "_" or letter
  - Followed by letters, digits, periods, hyphens, underscores
  * Cannot use the string "xml" in any case combination
  +----------------------+    +--------------------------------------+
  |  Valid Tag Names     |    |     Invalid Tag Names                |
  +----------------------+    +--------------------------------------+
  | <_Element1>          |    | <1Tag> (can't begin with a number)   |
  | <My.Emeent>          |    | <#Element&ent> (invalid characters in name)
  | <My-Element_Name>    |    | <XmL> (the string "xml" is reserved) |
  +----------------------+    +--------------------------------------+
-----------------
Attributes:
* Attributes are specified on opening element tags
- Must start with letter or underscore
  - can be followed by digits, letters, hyphens, periods, underscores
- Attributes that begin with "xml" are reserved
- Attributes appear only once on a given element
----------------
Comments:
* Comments embed human-readable information
  <element>
    <!-- comment -->
  </element>
----------------
Character Data Sections (CDATA)
* Part of document, but not parsed by the XML parser
* Defined using <![CDATA[ and ends with ]]>
* typically used to contain unescaped textual data

<script>
Not parsed, so & and < and > are legal
<![CDATA[
  function f(a, b){
    return a < b;
  }
]]
</script>
---------------
Processing Instructions
* Special instructions to the XML parser
* Have the form <?targetName instruction ?>
  - The "xml" target anem is reserved
  * Can start with number or letter, then be followed by digits, letters, hyphens, periods, underscores
<?SpellcheckMode mode="en-GB" ?>
----------------
Entities:
* Help shorten and modularize XML documents
* Provide markup for otherwise illegal characters
* General entities:
  - Replaced by parser with a full string
  - Examples: &copyright; or &author;
* Character entities:
  - &#<char code number>;
  - &#070
  - &amp;
  - &quot;
